// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	v1 "github.com/kinneko-de/api-contract/golang/kinnekode/restaurant/document/v1"
	mock "github.com/stretchr/testify/mock"
)

// DocumentServiceGateway is an autogenerated mock type for the DocumentServiceGateway type
type DocumentServiceGateway struct {
	mock.Mock
}

type DocumentServiceGateway_Expecter struct {
	mock *mock.Mock
}

func (_m *DocumentServiceGateway) EXPECT() *DocumentServiceGateway_Expecter {
	return &DocumentServiceGateway_Expecter{mock: &_m.Mock}
}

// CreateDocumentServiceClient provides a mock function with given fields:
func (_m *DocumentServiceGateway) CreateDocumentServiceClient() (v1.DocumentServiceClient, error) {
	ret := _m.Called()

	var r0 v1.DocumentServiceClient
	var r1 error
	if rf, ok := ret.Get(0).(func() (v1.DocumentServiceClient, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() v1.DocumentServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.DocumentServiceClient)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DocumentServiceGateway_CreateDocumentServiceClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateDocumentServiceClient'
type DocumentServiceGateway_CreateDocumentServiceClient_Call struct {
	*mock.Call
}

// CreateDocumentServiceClient is a helper method to define mock.On call
func (_e *DocumentServiceGateway_Expecter) CreateDocumentServiceClient() *DocumentServiceGateway_CreateDocumentServiceClient_Call {
	return &DocumentServiceGateway_CreateDocumentServiceClient_Call{Call: _e.mock.On("CreateDocumentServiceClient")}
}

func (_c *DocumentServiceGateway_CreateDocumentServiceClient_Call) Run(run func()) *DocumentServiceGateway_CreateDocumentServiceClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *DocumentServiceGateway_CreateDocumentServiceClient_Call) Return(_a0 v1.DocumentServiceClient, _a1 error) *DocumentServiceGateway_CreateDocumentServiceClient_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *DocumentServiceGateway_CreateDocumentServiceClient_Call) RunAndReturn(run func() (v1.DocumentServiceClient, error)) *DocumentServiceGateway_CreateDocumentServiceClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewDocumentServiceGateway creates a new instance of DocumentServiceGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDocumentServiceGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *DocumentServiceGateway {
	mock := &DocumentServiceGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
